<?xml version="1.0" encoding="UTF-8"?>
<project name="AntIvyConsoleApp" default="ivy-resolve" basedir="."
         xmlns:ivy="antlib:org.apache.ivy.ant">

    <!-- Define Directories -->
    <property name="src.dir" value="src"/>
    <property name="build.dir" value="build"/>

    <property name="test.dir" value="test"/>
    <property name="test.build.dir" value="${build.dir}/test-classes"/>

    <property name="lib.dir" value="lib"/>
    <property name="ivylib.dir" value="ivylib"/>
    <property name="report.dir" value="${build.dir}/reports"/>

    <property name="dist.dir" value="dist"/>
    <property name="jar.name" value="AntIvyConsoleApp.jar"/>


    <!-- Register Ivy Task -->
    <taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant">
        <classpath>
            <pathelement location="${ivylib.dir}/ivy-2.5.3.jar"/>
        </classpath>
    </taskdef>

    <!-- Load Ivy Settings -->
    <target name="ivy-settings">
        <ivy:settings file="ivysettings.xml"/>
    </target>

    <target name="ivy-clean">
        <echo message="Cleaning Ivy dependencies..." />

        <!-- Remove downloaded dependencies from the project's lib directory -->
        <delete dir="${lib.dir}" failonerror="false"/>

        <!-- Remove Ivy cache (optional, forces re-download) -->
        <delete dir="${user.home}/.ivy2/cache" failonerror="false"/>
    </target>


    <target name="ivy-resolve" depends="ivy-clean">
        <echo message="Resolving Ivy dependencies..." />

        <!-- Ensure the lib directory exists before retrieving dependencies -->
        <mkdir dir="${lib.dir}"/>

        <!-- Retrieve dependencies based on the ivy.xml file -->
        <ivy:retrieve pattern="${lib.dir}/[artifact]-[revision](-[classifier]).[ext]"/>
    </target>

    <!-- Generate Dependency Report -->
    <target name="report" depends="ivy-resolve">
        <mkdir dir="${report.dir}"/>
        <ivy:report todir="${report.dir}"/>
    </target>

    <target name="clean">
        <delete dir="${build.dir}"/>
    </target>

    <!-- Compile Main Source Code -->
    <target name="compile">
        <mkdir dir="${build.dir}"/>
        <javac srcdir="${src.dir}" destdir="${build.dir}" includeantruntime="false">
            <include name="**/*.java"/>
            <classpath>
                <fileset dir="${lib.dir}">
                    <include name="**/*.jar"/>
                </fileset>
            </classpath>
        </javac>
    </target>

    <!-- Compile Test Classes -->
    <target name="compile-test" depends="compile">
        <mkdir dir="${test.build.dir}"/>
        <javac srcdir="${test.dir}" destdir="${test.build.dir}" includeantruntime="false">
            <classpath>
                <pathelement location="${build.dir}"/> <!-- ✅ Compiled production code -->
                <pathelement location="${test.build.dir}"/>
                <fileset dir="${lib.dir}">
                    <include name="**/*.jar"/>
                </fileset>
            </classpath>
        </javac>
    </target>

    <target name="clean-test">
        <delete dir="${build.dir}/test-results"/>
    </target>

    <!-- Run test-->
    <target name="test" depends="compile-test">
        <mkdir dir="${build.dir}/test-results"/>

        <java classname="org.junit.platform.console.ConsoleLauncher" fork="true">
            <classpath>
                <pathelement location="${build.dir}/test-classes"/>  <!-- ✅ Test compiled classes -->
                <pathelement location="${build.dir}"/>
                <fileset dir="${lib.dir}">  <!-- ✅ Include JUnit 5 JARs -->
                    <include name="**/*.jar"/>
                </fileset>
            </classpath>

            <arg value="--scan-classpath"/>
            <arg value="--reports-dir=${build.dir}/test-results"/>

        </java>
    </target>

    <!-- Create JAR file -->
    <target name="jar" depends="compile">
        <mkdir dir="${dist.dir}"/>
        <jar destfile="${dist.dir}/${jar.name}" basedir="${build.dir}">
            <manifest>
                <attribute name="Main-Class" value="Main"/>
            </manifest>
        </jar>
    </target>


    <!-- Run the Application -->
    <target name="run" depends="compile">
        <java classname="Main" fork="true">
            <classpath>
                <pathelement location="${build.dir}"/>
                <fileset dir="${lib.dir}">
                    <include name="**/*.jar"/>
                </fileset>
            </classpath>
        </java>
    </target>

</project>
